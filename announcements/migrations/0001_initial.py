# Generated by Django 5.1.5 on 2025-01-30 22:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('type', models.CharField(choices=[('animal', 'Животное'), ('service', 'Услуга'), ('mating', 'Вязка'), ('lost_found', 'Потеряно/Найдено')], max_length=20, verbose_name='Тип')),
                ('status', models.CharField(choices=[('active', 'Активно'), ('closed', 'Закрыто'), ('moderation', 'На модерации')], default='moderation', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Просмотры')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Премиум')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='адрес')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='долгота')),
                ('images', models.TextField(default='[]', verbose_name='Изображения')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория объявления',
                'verbose_name_plural': 'Категории объявлений',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='announcements/', verbose_name='Изображение')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
            ],
            options={
                'verbose_name': 'Изображение объявления',
                'verbose_name_plural': 'Изображения объявлений',
                'ordering': ['-is_main', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LostFoundAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('lost', 'Потеряно'), ('found', 'Найдено')], max_length=10, verbose_name='Тип')),
                ('animal_type', models.CharField(blank=True, choices=[('dog', 'Собака'), ('cat', 'Кошка'), ('bird', 'Птица'), ('rodent', 'Грызун'), ('reptile', 'Рептилия'), ('fish', 'Рыба'), ('exotic', 'Экзотическое животное')], max_length=20, null=True, verbose_name='Тип животного')),
                ('breed', models.CharField(blank=True, max_length=100, verbose_name='Порода')),
                ('color', models.CharField(blank=True, max_length=50, null=True, verbose_name='Основной цвет')),
                ('size', models.CharField(choices=[('tiny', 'Очень маленький'), ('small', 'Маленький'), ('medium', 'Средний'), ('large', 'Большой'), ('very_large', 'Очень большой')], default='medium', max_length=20, verbose_name='Размер')),
                ('distinctive_features', models.TextField(verbose_name='Отличительные черты')),
                ('date_lost_found', models.DateTimeField(verbose_name='Дата и время пропажи/находки')),
                ('location', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Место пропажи/находки')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Контактный телефон')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Контактный email')),
                ('reward_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма вознаграждения')),
                ('color_pattern', models.CharField(blank=True, max_length=50, verbose_name='Тип окраса')),
                ('microchipped', models.BooleanField(default=False, verbose_name='Есть микрочип')),
                ('collar_details', models.CharField(blank=True, max_length=255, verbose_name='Детали ошейника')),
                ('special_marks', models.JSONField(blank=True, null=True, verbose_name='Особые приметы')),
                ('search_history', models.JSONField(blank=True, null=True, verbose_name='История поиска')),
                ('search_areas', models.JSONField(blank=True, null=True, verbose_name='Зоны поиска')),
                ('contacted_users', models.TextField(default='[]', verbose_name='Контактированные пользователи')),
            ],
            options={
                'verbose_name': 'Объявление о потере/находке',
                'verbose_name_plural': 'Объявления о потере/находке',
            },
        ),
        migrations.CreateModel(
            name='LostPet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('lost', 'Потерян'), ('found', 'Найден'), ('resolved', 'Разрешено')], default='lost', max_length=20, verbose_name='Статус')),
                ('date_lost_found', models.DateTimeField(verbose_name='Дата пропажи/находки')),
                ('pet_type', models.CharField(max_length=50, verbose_name='Вид животного')),
                ('breed', models.CharField(blank=True, max_length=100, verbose_name='Порода')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Примерный возраст')),
                ('distinctive_features', models.TextField(verbose_name='Отличительные черты')),
                ('has_collar', models.BooleanField(default=False, verbose_name='Есть ошейник')),
                ('has_chip', models.BooleanField(default=False, verbose_name='Есть чип')),
                ('chip_number', models.CharField(blank=True, max_length=50, verbose_name='Номер чипа')),
                ('last_seen_location', models.CharField(max_length=255, verbose_name='Место последней встречи')),
                ('last_seen_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта последней встречи')),
                ('last_seen_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота последней встречи')),
                ('search_radius', models.IntegerField(default=5, verbose_name='Радиус поиска (км)')),
                ('contact_name', models.CharField(max_length=100, verbose_name='Контактное лицо')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Контактный телефон')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Контактный email')),
                ('reward_offered', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Вознаграждение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
            ],
            options={
                'verbose_name': 'Потерянное животное',
                'verbose_name_plural': 'Потерянные животные',
            },
        ),
        migrations.CreateModel(
            name='MatingAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_medical_exam', models.BooleanField(default=False, verbose_name='Пройден медосмотр')),
                ('medical_exam_date', models.DateField(blank=True, null=True, verbose_name='Дата медосмотра')),
                ('vaccinations', models.JSONField(blank=True, null=True, verbose_name='Прививки')),
                ('genetic_tests', models.JSONField(blank=True, null=True, verbose_name='Генетические тесты')),
                ('medical_documents', models.FileField(blank=True, null=True, upload_to='mating/medical_docs/', verbose_name='Медицинские документы')),
                ('titles', models.TextField(default='[]', verbose_name='Титулы')),
                ('achievements', models.TextField(blank=True, verbose_name='Достижения')),
                ('show_participation', models.JSONField(blank=True, null=True, verbose_name='Участие в выставках')),
                ('partner_requirements', models.TextField(blank=True, null=True, verbose_name='Требования к партнеру')),
                ('preferred_breeds', models.TextField(default='[]', verbose_name='Предпочтительные породы')),
                ('min_partner_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Минимальный возраст партнера')),
                ('max_partner_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Максимальный возраст партнера')),
                ('required_medical_tests', models.JSONField(blank=True, null=True, verbose_name='Требуемые медицинские тесты')),
                ('required_titles', models.JSONField(blank=True, null=True, verbose_name='Требуемые титулы')),
                ('mating_conditions', models.TextField(blank=True, null=True, verbose_name='Условия вязки')),
                ('price_policy', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ценовая политика')),
                ('contract_required', models.BooleanField(default=True, verbose_name='Требуется контракт')),
                ('successful_matings', models.PositiveIntegerField(default=0, verbose_name='Успешные вязки')),
                ('last_mating_date', models.DateField(blank=True, null=True, verbose_name='Дата последней вязки')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен для вязки')),
            ],
            options={
                'verbose_name': 'Объявление о вязке',
                'verbose_name_plural': 'Объявления о вязке',
            },
        ),
        migrations.CreateModel(
            name='ServiceAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('walking', 'Выгул'), ('grooming', 'Груминг'), ('training', 'Дрессировка'), ('veterinary', 'Ветеринарные услуги'), ('boarding', 'Передержка')], max_length=20, verbose_name='Тип услуги')),
                ('experience', models.PositiveIntegerField(verbose_name='Опыт работы (лет)')),
                ('certificates', models.TextField(blank=True, verbose_name='Сертификаты')),
                ('schedule', models.TextField(verbose_name='График работы')),
            ],
            options={
                'verbose_name': 'Объявление об услуге',
                'verbose_name_plural': 'Объявления об услугах',
            },
        ),
        migrations.CreateModel(
            name='AnimalAnnouncement',
            fields=[
                ('announcement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='animal_details', serialize=False, to='announcements.announcement')),
                ('species', models.CharField(max_length=100, verbose_name='Вид животного')),
                ('breed', models.CharField(blank=True, max_length=100, verbose_name='Порода')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=10, verbose_name='Пол')),
                ('size', models.CharField(choices=[('small', 'Маленький'), ('medium', 'Средний'), ('large', 'Большой')], max_length=20, verbose_name='Размер')),
                ('color', models.CharField(max_length=50, verbose_name='Окрас')),
                ('pedigree', models.BooleanField(default=False, verbose_name='Родословная')),
                ('vaccinated', models.BooleanField(default=False, verbose_name='Вакцинирован')),
                ('passport', models.BooleanField(default=False, verbose_name='Ветеринарный паспорт')),
                ('microchipped', models.BooleanField(default=False, verbose_name='Чипирован')),
            ],
            options={
                'verbose_name': 'Объявление о животном',
                'verbose_name_plural': 'Объявления о животных',
            },
        ),
    ]
